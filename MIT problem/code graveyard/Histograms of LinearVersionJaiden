{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1FRCgNBOzZzHJPDYexPrdWaKK23mU6ota","timestamp":1670428516764},{"file_id":"17T648t5873vMcPFGHJzlR9Mtd2__XI9T","timestamp":1670386285255}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":14,"metadata":{"id":"-EUMHtjoSswX","executionInfo":{"status":"ok","timestamp":1670430702503,"user_tz":300,"elapsed":13,"user":{"displayName":"Jaiden Shin","userId":"03276079734548615298"}}},"outputs":[],"source":["import numpy as np\n","import math\n","import matplotlib.pyplot as plt\n","from queue import PriorityQueue\n","import scipy.stats as stats\n","\n","R = 0.25\n","L = 0.25\n","N = 50\n","T = 200 #time"]},{"cell_type":"code","source":["def findMin(N, waitingTimes):\n","  minWT = waitingTimes[0]\n","  pos = 0;\n","\n","  for i in range(2*N):\n","    if (waitingTimes[i] < minWT):\n","      minWT = waitingTimes[i]\n","      pos = i\n","\n","  return minWT, pos  "],"metadata":{"id":"nG5mcUleWcJp","executionInfo":{"status":"ok","timestamp":1670430702503,"user_tz":300,"elapsed":13,"user":{"displayName":"Jaiden Shin","userId":"03276079734548615298"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["def simulate():\n","  numberLine = np.linspace(0, 2*N, 2*N + 1)\n","  waitingTimes = np.linspace(0, 2*N, 2*N + 1)\n","\n","  posN = [N]\n","  times = [0]\n","  timeElapsed = 0;\n","  count = 0\n","\n","\n","  #intial alarm clocks\n","  for i in range(2*N):\n","    waitingTimes[i] = -1/R * np.log(np.random.uniform(0, 1))\n","\n","  while (timeElapsed < T):\n","    count += 1\n","    minWT, pos = findMin(N, waitingTimes)\n","\n","    timeElapsed = minWT\n","    #print(timeElapsed)\n","\n","    #switch on the number line\n","    if (pos < 2*N):\n","      temp = numberLine[pos]\n","      numberLine[pos] = numberLine[pos + 1]\n","      numberLine[pos + 1] = temp\n","\n","    #fixing waiting times\n","    if (pos > 0):\n","      waitingTimes[pos - 1] = waitingTimes[pos]\n","      waitingTimes[pos-1] += -1/R * np.log(np.random.uniform(0, 1)) if numberLine[pos-1] < numberLine[pos] else -1/L * np.log(np.random.uniform(0, 1))\n","    if (pos + 1 < 2*N):\n","      waitingTimes[pos + 1] = waitingTimes[pos]\n","      waitingTimes[pos+1] += -1/R * np.log(np.random.uniform(0, 1)) if numberLine[pos+1] < numberLine[pos+2] else -1/L * np.log(np.random.uniform(0, 1))\n","    waitingTimes[pos] += -1/R * np.log(np.random.uniform(0, 1)) if numberLine[pos] < numberLine[pos+1] else -1/L * np.log(np.random.uniform(0, 1))\n","\n","    if (numberLine[pos] == N):\n","      posN.append(posN[-1] + 1)\n","      times.append(timeElapsed)\n","      #count += 1\n","    if (numberLine[pos + 1] == N):\n","      posN.append(posN[-1] - 1)\n","      times.append(timeElapsed)\n","      #count += 1\n","\n","  return times, posN\n","  #plt.plot(times, posN)\n","  #plt.show()\n","#print(count)\n","\n","\n"],"metadata":{"id":"ffyK-dVaS2cn","executionInfo":{"status":"ok","timestamp":1670430702504,"user_tz":300,"elapsed":14,"user":{"displayName":"Jaiden Shin","userId":"03276079734548615298"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["numPaths = 10000\n","\n","endpoints = np.zeros(101)\n","endings = np.zeros(numPaths)\n","xValues = np.linspace(0,100,101)\n","for i in range(numPaths):\n","  if (i % 1000 == 0):\n","    print(i)\n","  times, posN = simulate()\n","  endpoints[posN[-1]] += 1\n","  endings[i] = posN[-1]"],"metadata":{"id":"JsuIenSFVZeD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670430702020,"user_tz":300,"elapsed":657065,"user":{"displayName":"Jaiden Shin","userId":"03276079734548615298"}},"outputId":"cb8e57f0-8bc0-467e-9f3e-b38dd47de290"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1000\n","2000\n","3000\n","4000\n","5000\n","6000\n","7000\n","8000\n","9000\n"]}]},{"cell_type":"code","source":["plt.figure(figsize = (8, 8))\n","#plt.plot(xValues, endpoints)\n","plt.hist(endings, 39, density = True)\n","\n","\n","mu = N\n","variance = np.var(endings)\n","print(variance)\n","\n","sigma = math.sqrt(variance)\n","x = np.linspace(mu - 3*sigma, mu + 3*sigma, 100)\n","plt.plot(x, stats.norm.pdf(x, mu, sigma))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"eXgvMNrxaza4","executionInfo":{"status":"ok","timestamp":1670430702499,"user_tz":300,"elapsed":478,"user":{"displayName":"Jaiden Shin","userId":"03276079734548615298"}},"outputId":"7034d8d7-cd5d-447a-d854-4a153f01a9cf"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["101.61609344\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x576 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[],"metadata":{"id":"EWGJqf3mTEt_","executionInfo":{"status":"ok","timestamp":1670430702502,"user_tz":300,"elapsed":4,"user":{"displayName":"Jaiden Shin","userId":"03276079734548615298"}}},"execution_count":13,"outputs":[]}]}